html,
body {
  height: 100%;
}

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1600;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 80;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: border-box;
      margin: 0 auto;
    }

    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
}

@else {

  // По брейк-поинтам
  [class*="__container"] {
    margin: 0 auto;

    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    }

    @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }

    @media (max-width: $pc) {
      max-width: rem(970);
    }

    @media (max-width: $tablet) {
      max-width: rem(750);
    }

    @media (max-width: $mobile) {
      max-width: none;

      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

body {
  font-family: 'Play', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.4;
  color: $default;
  color: #333;
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  transition: all 0.3s linear;

  &.black-theme {
    background-color: #000;
    color: #fff0bd;
  }
}

// .body--hidden {
//   overflow: hidden;
// }

.main {
  flex-grow: 1;
}

.btn {
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  font-size: 18px;
  line-height: 1.3;
  letter-spacing: 0.03em;
  border-radius: 6px;
  color: $white;
  background-color: $accent;
  padding: 12px 34px;
  outline: transparent;
  transition: box-shadow linear 0.2s, background-color linear 0.2s, color linear 0.2s;

    &:focus {
      box-shadow: 0 0 0 4px #E0EDCF;
    }

    &:hover {
      background-color: $white;
      color: $accent;
    }

    &:active {
      box-shadow: inset 0 4px 4px rgba(0, 0, 0, 0.25);
      color: rgba(255, 255, 255, 0.5);
    }

    @include r(768) {
      font-size: 14px;
    }
}


.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.title {
  font-family: 'Play', sans-serif;
  font-weight: 700;
  letter-spacing: 0.03em;
  text-wrap: balance;
  @include adaptiveValue("font-size", 40, 26);
  margin-bottom: 20px;
  text-shadow: 5px -2px 11px black, 10px -2px 25px #ededf3, 7px 10px 20px rgb(255, 217, 0);
  transition: all 0.2s linear;
  
  .black-theme & {
    text-shadow: 5px -2px 11px #fff, 10px -2px 25px #ededf3, 7px 10px 20px #c5c5c5;
  }
}


.body-lock {
  overflow: hidden;
}

.content {

  &::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background-color: $default;
    visibility: hidden;
    opacity: 0;
    transition: all 0.6s linear;
  }
}
.lock {
  position: relative;
  
  &::after {
    visibility: visible;
    opacity: 1;
    z-index: 2;
  }
}

section {
  padding: 40px 0;
}